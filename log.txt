PS D:\SJTU\cumcm\Cumcm codes\cumcm2011B>  cd 'd:\SJTU\cumcm\Cumcm codes\cumcm2011B'; & 'D:\My_app\anaconda\envs\grb2\python.exe' 'c:\Users\JoyJ\.vscode\extensions\ms-python.python-2020.8.103604\pythonFiles\lib\python\debugpy\launcher' '63824' '--' 'd:\SJTU\cumcm\Cumcm codes\cumcm2011B\import_data.py' 
['全市交通路口节点数据', '全市交通路口的路线', '全市交巡警平台', '全市区出入口的位置', '六城区的基本数据']
<xlrd.sheet.Sheet object at 0x000001B5EDC0C2C8>
全市交通路口节点数据 583 7
582
Nodes: 583
583
[75, 78, 44, 45, 65, 39, 63, 49, 50, 59, 32, 47, 9, 47, 35, 34, 22, 26, 25, 471, 21, 7, 31, 14, 38, 40, 42, 81, 81, 83, 79, 86, 22, 372, 13, 13, 383, 13, 25, 11, 27, 10, 12, 29, 15, 30, 7, 48, 32, 34, 33, 34, 8, 9, 45, 35, 37, 16, 39, 7, 39, 41, 40, 2, 17, 92, 43, 2, 72, 3, 46, 8, 55, 48, 6, 5, 61, 50, 53, 51, 52, 59, 56, 52, 54, 55, 63, 3, 57, 58, 60, 4, 59, 62, 60, 4, 85, 64, 65, 76, 66, 67, 76, 44, 68, 69, 75, 70, 71, 1, 2, 43, 72, 74, 73, 74, 18, 1, 80, 76, 77, 78, 19, 79, 80, 18, 82, 83, 90, 84, 85, 20, 87, 88, 88, 92, 89, 91, 20, 84, 90, 91, 92, 104, 110, 116, 136, 137, 138, 142, 99, 143, 165, 148, 132, 150, 102, 103, 156, 93, 154, 105, 
106, 107, 111, 117, 94, 94, 107, 106, 109, 110, 112, 109, 113, 113, 114, 116, 115, 154, 95, 165, 117, 129, 118, 128, 105, 119, 126, 120, 121, 123, 104, 122, 123, 125, 124, 126, 125, 127, 132, 127, 128, 130, 133, 129, 
130, 131, 131, 134, 135, 133, 134, 140, 135, 96, 136, 137, 99, 97, 139, 140, 142, 141, 146, 143, 145, 144, 145, 148, 146, 147, 149, 150, 149, 152, 151, 152, 152, 153, 155, 156, 157, 159, 158, 164, 159, 162, 164, 160, 
161, 162, 163, 163, 164, 98, 377, 265, 181, 250, 255, 189, 225, 227, 228, 216, 231, 219, 233, 232, 236, 213, 220, 197, 196, 184, 187, 582, 210, 284, 291, 274, 305, 270, 306, 307, 308, 273, 184, 196, 185, 186, 168, 185, 186, 176, 186, 190, 192, 62, 191, 192, 193, 193, 175, 194, 188, 196, 197, 198, 177, 199, 200, 201, 177, 202, 202, 204, 205, 178, 206, 210, 207, 200, 208, 199, 206, 208, 209, 211, 212, 213, 214, 214, 175, 215, 217, 217, 172, 214, 174, 212, 211, 220, 222, 220, 178, 223, 224, 174, 223, 226, 224, 172, 172, 228, 218, 228, 230, 171, 232, 233, 234, 168, 234, 48, 173, 237, 30, 235, 238, 239, 29, 240, 241, 242, 243, 230, 244, 231, 244, 232, 236, 241, 242, 245, 247, 237, 238, 369, 239, 249, 167, 251, 252, 252, 253, 240, 254, 169, 256, 257, 249, 260, 258, 248, 260, 260, 262, 263, 267, 261, 264, 262, 181, 265, 267, 255, 268, 269, 270, 257, 271, 256, 272, 295, 182, 170, 241, 273, 275, 276, 170, 277, 278, 283, 275, 278, 280, 277, 281, 282, 283, 282, 284, 281, 285, 204, 203, 287, 288, 285, 288, 290, 285, 291, 281, 279, 179, 293, 182, 274, 292, 293, 272, 292, 296, 179, 
290, 296, 289, 297, 298, 288, 299, 301, 287, 301, 303, 300, 304, 299, 304, 297, 269, 307, 268, 309, 310, 312, 307, 311, 305, 311, 313, 314, 311, 304, 303, 314, 316, 302, 264, 203, 316, 318, 315, 319, 181, 313, 350, 356, 358, 368, 367, 363, 364, 365, 347, 343, 330, 331, 392, 330, 331, 334, 339, 328, 335, 336, 333, 337, 338, 343, 339, 342, 327, 447, 341, 342, 327, 344, 326, 345, 346, 323, 326, 352, 360, 348, 320, 340, 349, 320, 371, 351, 355, 352, 354, 353, 354, 357, 355, 356, 321, 357, 358, 358, 360, 359, 360, 367, 361, 362, 323, 322, 264, 332, 325, 324, 367, 364, 366, 369, 368, 349, 369, 370, 371, 29, 28, 23, 431, 438, 456, 436, 424, 429, 430, 375, 416, 417, 376, 458, 423, 397, 399, 405, 402, 101, 93, 460, 467, 473, 449, 473, 442, 444, 388, 390, 389, 391, 100, 330, 153, 391, 329, 393, 395, 439, 391, 394, 395, 380, 396, 440, 380, 398, 441, 398, 381, 400, 403, 401, 402, 382, 403, 414, 404, 410, 405, 407, 408, 406, 407, 437, 438, 409, 410, 411, 411, 412, 413, 416, 414, 415, 101, 161, 416, 437, 418, 421, 419, 420, 421, 422, 379, 379, 376, 424, 378, 425, 429, 426, 428, 427, 378, 428, 436, 429, 433, 431, 432, 434, 433, 434, 374, 435, 374, 373, 446, 440, 443, 441, 442, 386, 443, 445, 332, 446, 455, 444, 448, 445, 385, 450, 467, 446, 451, 452, 465, 453, 454, 462, 455, 461, 456, 457, 372, 374, 458, 372, 459, 486, 14, 21, 461, 462, 463, 464, 452, 466, 467, 468, 464, 469, 463, 470, 383, 24, 472, 468, 384, 447, 473, 471, 340, 555, 565, 545, 501, 542, 566, 577, 580, 568, 489, 559, 539, 570, 571, 572, 573, 487, 491, 488, 482, 560, 487, 490, 481, 550, 481, 492, 530, 493, 496, 494, 495, 495, 499, 498, 495, 497, 498, 501, 499, 477, 500, 477, 502, 520, 530, 503, 504, 505, 506, 513, 507, 509, 504, 507, 509, 510, 510, 511, 512, 483, 513, 514, 515, 516, 517, 518, 523, 505, 519, 521, 503, 520, 521, 522, 529, 523, 527, 524, 515, 525, 514, 526, 512, 525, 527, 529, 536, 538, 530, 531, 481, 532, 533, 547, 548, 529, 534, 535, 536, 537, 538, 478, 
539, 526, 540, 478, 541, 484, 543, 565, 536, 544, 476, 555, 535, 546, 547, 552, 534, 549, 552, 481, 550, 551, 559, 552, 556, 553, 476, 554, 555, 554, 475, 475, 558, 564, 559, 549, 16, 561, 38, 558, 562, 563, 480, 564, 565, 566, 567, 480, 569, 569, 574, 570, 571, 571, 541, 578, 578, 575, 576, 479, 573, 579, 579, 581, 576, 582, 183, 578]
928
Edges 928
<class 'numpy.ndarray'>
9.300537618869138
9.300537618869138
1.5703661856301987
0.6403124237432849
1.5703661856301987
6.993973907660068
<class 'list'>
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
PS D:\SJTU\cumcm\Cumcm codes\cumcm2011B>  cd 'd:\SJTU\cumcm\Cumcm codes\cumcm2011B'; & 'D:\My_app\anaconda\envs\grb2\python.exe' 'c:\Users\JoyJ\.vscode\extensions\ms-python.python-2020.8.103604\pythonFiles\lib\python\debugpy\launcher' '63852' '--' 'd:\SJTU\cumcm\Cumcm codes\cumcm2011B\slove1_1.py' 
{1: [], 2: [], 3: [], 4: [], 5: [], 6: [], 7: [], 8: [], 9: [], 10: [], 11: [], 12: [], 13: [], 14: [], 15: [], 16: [], 17: [], 18: [], 19: [], 20: []}
路口 1 管辖的路口有： [67, 68, 69, 71, 73, 74, 75, 76, 78]
路口 2 管辖的路口有： [39, 40, 43, 44, 70, 72]
路口 3 管辖的路口有： [54, 55, 65, 66]
路口 4 管辖的路口有： [57, 60, 62, 63, 64]
路口 5 管辖的路口有： [49, 50, 51, 52, 53, 56, 58, 59]
路口 6 管辖的路口有： []
路口 7 管辖的路口有： [30, 32, 47, 48, 61]
路口 8 管辖的路口有： [33, 46]
路口 9 管辖的路口有： [31, 34, 35, 45]
路口 10 管辖的路口有： []
路口 11 管辖的路口有： [26, 27]
路口 12 管辖的路口有： [25]
路口 13 管辖的路口有： [21, 22, 23, 24]
路口 15 管辖的路口有： [28, 29]
路口 16 管辖的路口有： [36, 37, 38]
路口 17 管辖的路口有： [41, 42]
路口 18 管辖的路口有： [80, 81, 82, 83]
路口 19 管辖的路口有： [77, 79]
路口 20 管辖的路口有： [84, 85, 86, 87, 88, 89, 90, 91, 92]
4.751842
5.700525
PS D:\SJTU\cumcm\Cumcm codes\cumcm2011B>  cd 'd:\SJTU\cumcm\Cumcm codes\cumcm2011B'; & 'D:\My_app\anaconda\envs\grb2\python.exe' 'c:\Users\JoyJ\.vscode\extensions\ms-python.python-2020.8.103604\pythonFiles\lib\python\debugpy\launcher' '63859' '--' 'd:\SJTU\cumcm\Cumcm codes\cumcm2011B\solve1_2.py' 
1.570366
0.640312
1.570366
6.993974
[12, 14, 16, 21, 22, 23, 24, 28, 29, 30, 38, 48, 62]
Using license file C:\Users\JoyJ\gurobi.lic
Academic license - for non-commercial use only
Warning: Gurobi version mismatch between Python 9.0.3 and C library 9.0.1
Gurobi Optimizer version 9.0.1 build v9.0.1rc0 (win64)
Optimize a model with 53 rows, 281 columns and 800 nonzeros
Model fingerprint: 0xa8bc5a8a
Model has 1 general constraint
Variable types: 21 continuous, 260 integer (260 binary)
Coefficient statistics:
  Matrix range     [3e-01, 3e+01]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]
Presolve removed 0 rows and 20 columns
Presolve time: 0.00s
Presolved: 53 rows, 261 columns, 800 nonzeros
Variable types: 1 continuous, 260 integer (260 binary)

Root relaxation: objective 3.398711e+00, 124 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    3.39871    0   36          -    3.39871      -     -    0s
H    0     0                      19.5819090    3.39871  82.6%     -    0s
H    0     0                      10.7244060    3.39871  68.3%     -    0s
H    0     0                       8.0154570    3.39871  57.6%     -    0s
     0     0     cutoff    0         8.01546    8.01546  0.00%     -    0s

Cutting planes:
  MIR: 1
  RLT: 5

Explored 1 nodes (125 simplex iterations) in 0.04 seconds
Thread count was 8 (of 8 available processors)

Solution count 3: 8.01546 10.7244 19.5819 

Optimal solution found (tolerance 1.00e-04)
Best objective 8.015457000000e+00, best bound 8.015457000000e+00, gap 0.0000%
0 0 0 0 0 0 0 0 0 0 0 0 0 in line  1
0 0 0 0 0 0 0 0 0 0 1 0 0 in line  2
0 0 0 0 0 0 0 0 0 0 0 0 0 in line  3
0 0 0 0 0 0 0 0 0 0 0 0 1 in line  4
0 0 0 0 0 0 0 0 0 1 0 0 0 in line  5
0 0 0 0 0 0 0 0 0 0 0 1 0 in line  6
0 0 0 0 0 0 0 0 1 0 0 0 0 in line  7
0 0 0 0 0 0 0 0 0 0 0 0 0 in line  8
0 0 1 0 0 0 0 0 0 0 0 0 0 in line  9
1 0 0 0 0 0 0 0 0 0 0 0 0 in line  10
0 0 0 0 1 0 0 0 0 0 0 0 0 in line  11
0 0 0 0 0 0 1 0 0 0 0 0 0 in line  12
0 0 0 0 0 1 0 0 0 0 0 0 0 in line  13
0 0 0 1 0 0 0 0 0 0 0 0 0 in line  14
0 0 0 0 0 0 0 1 0 0 0 0 0 in line  15
0 1 0 0 0 0 0 0 0 0 0 0 0 in line  16
0 0 0 0 0 0 0 0 0 0 0 0 0 in line  17
0 0 0 0 0 0 0 0 0 0 0 0 0 in line  18
0 0 0 0 0 0 0 0 0 0 0 0 0 in line  19
0 0 0 0 0 0 0 0 0 0 0 0 0 in line  20
服务平台  2  管理着路口  38
服务平台  4  管理着路口  62
服务平台  5  管理着路口  30
服务平台  6  管理着路口  48
服务平台  7  管理着路口  29
服务平台  9  管理着路口  16
服务平台  10  管理着路口  12
服务平台  11  管理着路口  22
服务平台  12  管理着路口  24
服务平台  13  管理着路口  23
服务平台  14  管理着路口  21
服务平台  15  管理着路口  28
服务平台  16  管理着路口  14
最短时间: 8.015456999999884
